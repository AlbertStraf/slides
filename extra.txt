Format: Ctrl+Shift+F

Save: Ctrl+S
Save all: Ctrl+Shift+S

Rename: Alt-Shift-R

Autosave
Window - Preferences - General - Editors - Auto-save

Code generation
Source - Generate toString()...

---
Reference casting
- sempre protetto da instanceof
- pensare a possibili futuri cambiamenti

if (enemy instanceof Wizard) {
	return false;
} else {
	// Cosa succede se viene introdotto il personaggio Thief?
	if (((Warrior) enemy).getNumberWeapons() <= this.numberWeapons) {
		return true;
	} else {
		return false;
	}
}

---
Commenti
- preferiti i single-line //
- si preferisce metterli _prima_ della riga a cui si riferiscono // a destra sono poco leggibili

--
TODO
Window - Show View - Tasks
- utili per segnalare che c'è qualcosa da fare nel codice
- ricordarsi di toglierli!

--
Uso di package per tenere insieme file correlati

--
Semplificazione del codice
A)

boolean win = false;
// ...
if (win == true) {
	// ...
}

// equivalente a ...
if (win) {
	// ...
}

B)
public boolean figth(Actor target) {
	if (target instanceof Warrior) {
		return false;
	} else {
		return true;
	}
}

// equivalente a ...
public boolean figth(Actor target) {
	return target instanceof Warrior;
}
--
Naming convention per boolean
private boolean wizard;

public boolean isWizard() {
	return wizard;
}

public void setWizard(boolean wizard) {
	this.wizard = wizard;
}

--
Una classe non dovrebbe sapere nulla delle sue classi derivate
La conoscenza va nell'altro senso, dal basso verso l'alto
(Ma: pattern factory method)

--
Copia di array
- Arrays.copyOf() (e altri)

Nel caso di reference copia i reference, non crea nuovi oggetti
Se necessario, va forzata la creazione di nuovi oggetti - vedi Object.clone()
Tipicamente sconsigliato per costo e complessità
(Non moltiplicate gli oggetti, se se ne può fare a meno)
